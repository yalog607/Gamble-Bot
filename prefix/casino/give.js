const User = require('../../models/user.model.js');
const { EmbedBuilder } = require("discord.js");
const { success, danger } = require('../../color.json'); // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n ƒë√∫ng
const { prefix } = require('../../config.json');

module.exports = {
    cooldown: 3000,
    category: 'Casino',
    name: 'give', // T√™n l·ªánh
    aliases: ['pay', 'chuyen'], // C√°c bi·ªát danh cho l·ªánh
    description: 'Chuy·ªÉn ti·ªÅn cho ng∆∞·ªùi kh√°c', // M√¥ t·∫£ l·ªánh
    usage: "<user> <amount>", 
    run: async(client, message, args) => { // Thay ƒë·ªïi t·ª´ execute(interaction) sang run(client, message, args)
        const sender = message.author; // Ng∆∞·ªùi g·ª≠i l√† t√°c gi·∫£ tin nh·∫Øn
        
        // C·∫ßn parse args ƒë·ªÉ l·∫•y ng∆∞·ªùi nh·∫≠n v√† s·ªë ti·ªÅn
        // args[0] s·∫Ω l√† ng∆∞·ªùi nh·∫≠n (mention ho·∫∑c ID)
        // args[1] s·∫Ω l√† s·ªë ti·ªÅn
        
        // L·∫•y ng∆∞·ªùi nh·∫≠n t·ª´ args[0]
        let recipent = message.mentions.users.first(); // ∆Øu ti√™n mention
        if (!recipent && args[0]) {
            // N·∫øu kh√¥ng c√≥ mention, th·ª≠ t√¨m theo ID
            recipent = await client.users.fetch(args[0]).catch(() => null);
        }

        // Ki·ªÉm tra xem c√≥ ng∆∞·ªùi nh·∫≠n h·ª£p l·ªá kh√¥ng
        if (!recipent) {
            return await message.reply(`Vui l√≤ng tag ng∆∞·ªùi nh·∫≠n ho·∫∑c cung c·∫•p ID h·ª£p l·ªá.`);
        }

        // Ki·ªÉm tra ng∆∞·ªùi g·ª≠i v√† ng∆∞·ªùi nh·∫≠n c√≥ ph·∫£i l√† c√πng m·ªôt ng∆∞·ªùi kh√¥ng
        if (sender.id === recipent.id) {
            return await message.reply(`B·∫°n kh√¥ng th·ªÉ t·ª± chuy·ªÉn ti·ªÅn cho ch√≠nh m√¨nh!`);
        }

        const amount = parseInt(args[1]); // S·ªë ti·ªÅn t·ª´ args[1]

        // Ki·ªÉm tra s·ªë ti·ªÅn h·ª£p l·ªá
        if (isNaN(amount) || amount <= 0) {
            return await message.reply(`Vui l√≤ng nh·∫≠p s·ªë ti·ªÅn h·ª£p l·ªá ƒë·ªÉ chuy·ªÉn (ph·∫£i l·ªõn h∆°n 0).`);
        }

        try {
            const senderDB = await User.findOne({userId: sender.id});
            const recipentDB = await User.findOne({userId: recipent.id});

            // L·∫•y th√¥ng tin ng∆∞·ªùi g·ª≠i/ng∆∞·ªùi nh·∫≠n cho footer
            const senderUsername = sender.username;
            const recipentUsername = recipent.username;

            if (!senderDB) {
                return await message.reply(`B·∫°n ch∆∞a c√≥ t√†i kho·∫£n Casino.\nD√πng l·ªánh \`\`\`${prefix}start\`\`\` ƒë·ªÉ t·∫°o t√†i kho·∫£n.`);
            }
            if (!recipentDB) {
                return await message.reply(`Ng∆∞·ªùi nh·∫≠n \`${recipentUsername}\` ch∆∞a c√≥ t√†i kho·∫£n Casino.\nH·ªç c·∫ßn d√πng l·ªánh \`\`\`${prefix}start\`\`\` ƒë·ªÉ t·∫°o t√†i kho·∫£n.`);
            }

            if (senderDB.balance < amount) {
                return await message.reply(`B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ chuy·ªÉn.`);
            }
            
            senderDB.balance -= amount;
            recipentDB.balance += amount;
            await senderDB.save();
            await recipentDB.save();

            return await message.channel.send(`üí≥ **${senderUsername}** | Chuy·ªÉn th√†nh c√¥ng **$${new Intl.NumberFormat("en").format(amount)}** cho \`${recipentUsername}\`.`);
        } catch (error) {
            console.error('C√≥ l·ªói trong give command (prefix):', error);
            return await message.reply(`C√≥ l·ªói x·∫£y ra khi chuy·ªÉn ti·ªÅn. Vui l√≤ng th·ª≠ l·∫°i sau.`);
        }
    }
};