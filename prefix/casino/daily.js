const User = require('../../models/user.model.js');
const Daily = require('../../models/cooldowndaily.model.js'); // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n ƒë√∫ng
const { EmbedBuilder } = require("discord.js");
const { prefix } = require('../../config.json');
const { checkCoolDown } = require('../../helpers/utility.js');
function getRandomInteger(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

module.exports = {
    cooldown: 3000,
    category: 'Casino',
    name: 'daily', // T√™n l·ªánh
    description: 'Nh·∫≠n ti·ªÅn th∆∞·ªüng h·∫±ng ng√†y', // M√¥ t·∫£ l·ªánh
    run: async(client, message, args) => { // Thay ƒë·ªïi t·ª´ execute(interaction) sang run(client, message, args)
        try {
            const userId = message.author.id; // L·∫•y userId t·ª´ message.author
            const playerUsername = message.author.username;
            const playerAvatarURL = message.author.displayAvatarURL({ dynamic: true });

            const user = await User.findOne({
                userId: userId
            });

            if (!user) {
                return await message.reply(`B·∫°n ch∆∞a c√≥ t√†i kho·∫£n Casino. D√πng l·ªánh \`\`\`${prefix}start\`\`\` ƒë·ªÉ t·∫°o t√†i kho·∫£n.`); // Tr·∫£ l·ªùi nhanh
            }

            const timeCooldown = 24 * 60 * 60 * 1000;
            const checkTimeLeft = await checkCoolDown(userId, Daily, timeCooldown);
            if (!checkTimeLeft.status) {
                const timeLeft = `**${checkTimeLeft.timeLeft.hours}** ti·∫øng, **${checkTimeLeft.timeLeft.minutes}** ph√∫t`;
                return await message.reply(`B·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng h√¥m nay. H√£y ƒë·ª£i th√™m ${timeLeft} n·ªØa.`);
            }
            
            const dailyCoins = getRandomInteger(3000, 5000); // ƒê·∫£m b·∫£o min, max l√† s·ªë nguy√™n
            user.balance += dailyCoins;
            await user.save();
            
            return await message.channel.send(`**${playerUsername}** | Nh·∫≠n th∆∞·ªüng h·∫±ng ng√†y th√†nh c√¥ng **$${new Intl.NumberFormat("en").format(dailyCoins)}** üíµ`); // Tr·∫£ l·ªùi nhanh
        } catch (error) {
            console.error('C√≥ l·ªói trong daily command (prefix):', error); // Log l·ªói chi ti·∫øt h∆°n
            const playerUsername = message.author.username;
            const playerAvatarURL = message.author.displayAvatarURL({ dynamic: true });

            const errorEmbed = new EmbedBuilder()
                .setColor("Red")
                .setDescription(`C√≥ l·ªói x·∫£y ra khi nh·∫≠n th∆∞·ªüng h·∫±ng ng√†y. Vui l√≤ng th·ª≠ l·∫°i sau.`)
                .setFooter({ text: `Ng∆∞·ªùi g·ª≠i: ${playerUsername}`, iconURL: playerAvatarURL });
            return await message.channel.send({embeds: [errorEmbed]}); // Tr·∫£ l·ªùi nhanh v·ªõi l·ªói
        }
    }
};